<?xml version="1.0" encoding="UTF-8" ?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:iso="http://jsb.belgium.be/common/isocodes/v1_00"
            targetNamespace="http://jsb.belgium.be/common/isocodes/v1_00" elementFormDefault="qualified">


    <xsd:simpleType name="LanguageType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Language codes follow the ISO-639-1 two-letter code standards.
                For details, see http://www.loc.gov/standards/iso639-2/iso639jac.html

                Validation rules:
                - two lower case letters

                Regular expression: [a-z]{2}

                Examples: nl, fr, de, en, es, ...

				Notes.
				1. The xsd:language type has a facet ([a-zA-Z]{1,8})(-[a-zA-Z0-9]{1,8})*
				   which allows more than two characters. For example to denote regional
				   languages.
				2. For undetermined languages, ISO reserves the three-letter code
				   "und". For this reason, the two-letter restriction is not enforced
				   in the schema.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:language"/>
    </xsd:simpleType>

    <xsd:simpleType name="CountryType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Country codes should be in the ISO-3166-1 two-letter format.
                For a complete list, see

                Examples: BE, NL, FR, DE, GB, ES, ...
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:pattern value="[A-Z]+"/>
            <xsd:minLength value="2"/>
            <xsd:maxLength value="4"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="CurrencyType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Currency codes must follow the ISO-4217 code standards. These are three-letter codes
                derived from the ISO-639-1 two-letter country codes. For details, see
                http://www.bsi-global.com/British_Standards/currency/index.xalter

                Validation rules:
                - three upper case letters

                Regular expression: [A-Z]{3}

                Examples: EUR, GBP, USD, ...
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:pattern value="[A-Z]{3}"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="BicType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                The type definition of a "Bank Identifier Code" (BIC), specified in ISO 9362.

                For details, see http://www.swift.com/biconline/index.cfm?fuseaction=display_aboutbic

                Validation rules:
                - The length is 8 or 11 characters.
                - First 4 chars are alphabetic and denote the bank code
                - 5th and 6th char are an ISO country code
                - 7th and 8th char are alphanumeric and denote the region within a country
                - 9th - 11th char are the alphanumeric branch code
                - A BIC code must be in upper case letters

                Regular expression: [A-Z]{6}[A-Z0-9]{2}([A-Z0-9]{3}){0,1}

                Examples: ABNAFRPP, GEBABEBB04A, ...
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:pattern value="[A-Z]{6}[A-Z0-9]{2}([A-Z0-9]{3}){0,1}"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="IbanType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                The type definition of an international bank account number (IBAN), specified in ISO 13616.

                Validation rules:
                - The length is up to 34 characters
                - The first two characters are the ISO two-letter country code
                - The 3rd and 4th character are numeric control digits
                - The 5th to the last char are alphanumeric
                - For the calculation of the control digits:
                    o  move the first four chars to the end of the number
                    o  convert each alphabetic char in the number to a digit according to a conversion
                       table: A=10, B=11, C=12, ..., Y=34, Z=35
                       Note: each letter is converted to two digits, so the number of chars increases
                    o  calculate the mod 97 of the full number: it must be equal to one

                Regular expression: [A-Z]{2}\d{2}[A-Z0-9]{1,30}

                Examples: BE68539007547034, FR1420041010050500013M02606, GB29NWBK60161331926819
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:pattern value="[A-Z]{2}\d{2}[A-Z0-9]{1,30}"/>
        </xsd:restriction>
    </xsd:simpleType>
</xsd:schema>