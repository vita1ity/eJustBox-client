<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:core="urn:be:fgov:ejustice:commons:core:v1" xmlns:ejustboxp="urn:be:fgov:ejustice:ejustbox:publication:protocol:v1" xmlns:protocol="urn:be:fgov:ejustice:commons:protocol:v1" xmlns:ejustboxc="urn:be:fgov:ejustice:ejustbox:core:v1" xmlns:swaref="http://ws-i.org/profiles/basic/1.1/xsd" xmlns:ns1="urn:be:fgov:ejustice:commons:core:v1" targetNamespace="urn:be:fgov:ejustice:ejustbox:publication:protocol:v1" elementFormDefault="unqualified" attributeFormDefault="unqualified" version="1.0">
	<xs:import namespace="urn:be:fgov:ejustice:commons:protocol:v1" schemaLocation="ejustice-commons/XSD/ejustice-commons-schema-protocol-1_0.xsd"/>
	<xs:import namespace="urn:be:fgov:ejustice:commons:core:v1" schemaLocation="ejustice-commons/XSD/ejustice-commons-schema-core-1_0.xsd"/>
	<xs:import namespace="urn:be:fgov:ejustice:ejustbox:core:v1" schemaLocation="ejustice-eJustBox-schema-core-1_0.xsd"/>
	<xs:import namespace="http://ws-i.org/profiles/basic/1.1/xsd" schemaLocation="swaref-3_0.xsd"/>
	<xs:complexType name="DestinationContextType">
		<xs:complexContent>
			<xs:extension base="ejustboxc:EJustboxIdentifierType">
				<xs:sequence minOccurs="0">
					<xs:element name="OoOProcessed" type="xs:boolean" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="PublicationContentType">
		<xs:annotation>
			<xs:documentation>Contains all elements relative to the content of the message</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Document" type="ejustboxp:PublicationDocumentType"/>
			<xs:element name="EncryptableINSSPerson" type="xs:base64Binary" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If IsEncrypted == True, this MUST contain encrypted content. Anyway it must be converted to base64Binary</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Annex" type="ejustboxp:PublicationAnnexType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ContentSpecificationType">
		<xs:annotation>
			<xs:documentation>ContentSpecification for publication</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ejustboxc:ContentSpecificationType">
				<xs:sequence>
					<xs:annotation>
						<xs:documentation>Allows you to specify separatly the desired acknowledgments</xs:documentation>
					</xs:annotation>
					<xs:element name="PublicationReceipt" type="xs:boolean" default="false"/>
					<xs:element name="ReceivedReceipt" type="xs:boolean" default="false"/>
					<xs:element name="ReadReceipt" type="xs:boolean" default="false"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ContentContextType">
		<xs:sequence>
			<xs:element name="Content" type="ejustboxp:PublicationContentType"/>
			<xs:element name="ContentSpecification" type="ejustboxp:ContentSpecificationType"/>
			<xs:element name="CustomMeta" type="ejustboxc:CustomMetaType" minOccurs="0" maxOccurs="50"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PublicationAnnexType">
		<xs:annotation>
			<xs:documentation>Specifies content of an Annex</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="EncryptableTitle" type="xs:base64Binary">
				<xs:annotation>
					<xs:documentation>If IsEncrypted == True, this MUST contain encrypted content.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EncryptableContent" type="swaref:swaRef">
				<xs:annotation>
					<xs:documentation>If IsEncrypted == True, this MUST contain encrypted content. Anyway it must be converted to base64Binary</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DownloadFileName">
				<xs:annotation>
					<xs:documentation>This is not encrypted</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:minLength value="1"/>
						<xs:maxLength value="255"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="MimeType">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:minLength value="1"/>
						<xs:maxLength value="255"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="Digest" type="xs:string" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PublicationDocumentType">
		<xs:annotation>
			<xs:documentation>Specifies content of a Document message</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Title">
				<xs:annotation>
					<xs:documentation>This is not encrypted</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:minLength value="1"/>
						<xs:maxLength value="400"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="EncryptableContent">
				<xs:annotation>
					<xs:documentation>If IsEncrypted == True, this MUST contain encrypted content. Anyway it must be converted to base64Binary</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:base64Binary">
						<xs:maxLength value="1000000"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PublicationMessageType">
		<xs:annotation>
			<xs:documentation>Publish a new encrypted or non-encrypted message</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Actor" type="ejustboxc:ActorType"/>
			<xs:element name="DestinationContext" type="ejustboxp:DestinationContextType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Recipients</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentContext" type="ejustboxp:ContentContextType">
				<xs:annotation>
					<xs:documentation>Message content and details</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Meta" type="ejustboxc:MetaType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>System Meta's defined by eJustice</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="PublicationId" type="ejustboxc:PublicationIdType"/>
	</xs:complexType>
	<xs:element name="SendMessageRequest" type="ejustboxp:PublicationMessageType"/>
	<xs:element name="SendMessageResponse">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="protocol:StatusResponseType">
					<xs:sequence>
						<xs:element name="SentPublicationId" type="ejustboxc:PublicationIdType"/>
						<xs:element name="MessageId" type="ejustboxc:MessageIdType" minOccurs="0"/>
						<xs:element name="Recipient" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Recipients</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:complexContent>
									<xs:extension base="ejustboxc:EJustboxIdentifierType">
										<xs:sequence minOccurs="0">
											<xs:element name="AbsentFrom" type="xs:date"/>
											<xs:element name="AbsentTo" type="xs:date"/>
											<xs:element name="Substitute" type="ejustboxc:EJustboxIdentifierType" minOccurs="0" maxOccurs="unbounded">
												<xs:annotation>
													<xs:documentation>Recipients</xs:documentation>
												</xs:annotation>
											</xs:element>
										</xs:sequence>
									</xs:extension>
								</xs:complexContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
</xs:schema>
